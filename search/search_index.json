{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TIA HMI Simulation","text":"<p>This application is a Human-Machine Interface (HMI) simulation designed for use with PLCs (Programmable Logic Controllers) in a TIA (Totally Integrated Automation) environment. It provides a virtual platform for developing, testing, and demonstrating HMI screens and controls without the need for physical hardware.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Simulates a PLC-connected HMI panel for industrial automation scenarios</li> <li>Includes interactive pages such as Motor Controls, System Info, and more</li> <li>Visualizes real-time control states (e.g., motor on/off, direction, error)</li> <li>Supports user interaction via sliders, buttons, and touch events</li> </ul>"},{"location":"#typical-use-cases","title":"Typical Use Cases","text":"<ul> <li>Practice and learn embedded programming concepts using STM32 microcontrollers</li> <li>Experiment with HMI and PLC integration in a simulated environment</li> <li>Build foundational skills for real-world industrial automation projects</li> <li>Demonstrate embedded programming techniques to peers or instructors</li> </ul>"},{"location":"#application-pages","title":"Application Pages","text":"<ul> <li>Motor Controls Page</li> <li>Measured Values Page</li> <li>System Info Page</li> </ul>"},{"location":"#software-requirements","title":"Software requirements","text":"<ul> <li>Embedded Wizard V14</li> <li>STM32 CubeProgrammer</li> <li>STM32 CubeIDE</li> </ul>"},{"location":"#hardware-requirements","title":"Hardware requirements","text":"<ul> <li>STM32H7B3I-DK</li> </ul>"},{"location":"how_to_use/","title":"GCC Build Instructions","text":""},{"location":"how_to_use/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Generate Embedded Wizard code</p> <ul> <li>Open the Embedded Wizard project and generate code.</li> <li>Ensure <code>ewfiles.inc</code> exists in <code>Application/EmbeddedWizardGeneratedCode</code>.</li> </ul> </li> <li> <p>Set up the build environment</p> <ul> <li>From the project root, run:   <code>StartGccBuildEnvironment.bat</code></li> <li>This will open a terminal with the correct environment variables set.</li> </ul> </li> </ol>"},{"location":"how_to_use/#build-steps","title":"Build Steps","text":"<ol> <li> <p>Compile the project</p> <ul> <li>In the environment-enabled terminal, run:   <code>make -C cmake</code></li> <li>This will build all sources and create the <code>Obj/</code> and <code>Bin/</code> folders.</li> </ul> </li> <li> <p>Flash the firmware (optional)</p> <ul> <li>To flash the generated firmware to the target device, run:   <code>make -C cmake install</code></li> </ul> </li> <li> <p>Clean the build (optional)</p> <ul> <li>To remove build artifacts, run:   <code>make -C cmake clean</code></li> </ul> </li> </ol>"},{"location":"how_to_use/#notes","title":"Notes","text":"<ul> <li>If you move the project, update the paths in <code>cmake/Makefile</code> as needed (<code>EMWI_APP_PATH</code>, <code>SRC_PATH</code>, etc.).</li> <li>For debugging, use the <code>.elf</code> file in <code>Bin/</code> with your preferred debugger (e.g., ST-Link).</li> <li>Monitor the console/logs for runtime errors from HAL, FreeRTOS, or GUI runtime.</li> </ul>"},{"location":"measured_values/","title":"Measured Values","text":""},{"location":"motor_control/","title":"Motor Control","text":"<p>The Motor Controls page in the HMI provides an interface to monitor and control a simulated motor. It allows the user to select the motor state and view its status visually.</p>"},{"location":"motor_control/#features","title":"Features","text":"<p>Motor State Selection: A horizontal slider lets the user select between three states:</p> <ul> <li>0: Clockwise (CW)</li> <li>1: Off</li> <li>2: Counterclockwise (CCW) Status Indicators:</li> </ul> <p>Motor On: Shows a green LED when the motor is running (CW or CCW).</p> <p>Motor Off: Shows a specific LED when the motor is off.</p> <p>Motor Error: Shows a red LED if an error state is implemented (currently not triggered by the slider).</p>"},{"location":"motor_control/#labels","title":"Labels:","text":"<p>\"CCW\" (Counterclockwise), \"OFF\", and \"CW\" labels are displayed above the slider for clarity.</p> <p>The page title \"Motor Controls\" is shown at the top.</p>"},{"location":"motor_control/#how-it-works","title":"How It Works","text":"<p>The slider (HorizontalSlider) has three positions (0, 1, 2) and triggers the motorSlider slot on change.</p> <p>The motorSlider slot updates the visibility of the status indicators:</p> <p>If the slider is at 0 or 2 (CW or CCW), the green \"Motor On\" LED is shown.</p> <p>If the slider is at 1 (Off), the \"Motor Off\" LED is shown.</p> <p>The \"Motor Error\" LED is hidden in both cases (can be extended for error handling).</p>"},{"location":"motor_control/#visual-elements","title":"Visual Elements","text":"<p>Slider: Allows selection between CCW, OFF, and CW.</p> <p>LED Indicators: Visual feedback for motor status.</p> <p>Text Labels: For user guidance.</p>"},{"location":"system_info/","title":"System Info Page","text":"<p>The System Info page provides an overview of the current system status and device information within the HMI simulation. This page is designed to help users monitor essential parameters and verify the correct operation of the simulated HMI and its connection to the PLC environment.</p>"},{"location":"system_info/#features","title":"Features","text":"<ul> <li>Device Information:</li> <li>Displays key details such as device name, firmware version, and hardware identifiers.</li> <li>Status Indicators:</li> <li>Shows the operational status of the HMI and communication with the PLC.</li> <li>Read-Only Data:</li> <li>All information is presented in a read-only format for monitoring purposes.</li> </ul>"},{"location":"system_info/#typical-use-cases","title":"Typical Use Cases","text":"<ul> <li>Verifying the simulated HMI is running the correct firmware and configuration</li> <li>Checking communication status between the HMI and PLC</li> <li>Diagnostics the system</li> </ul>"}]}